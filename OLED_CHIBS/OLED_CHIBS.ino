#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for SSD1306 display connected using I2C
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Declaration for SSD1306 display connected using software SPI:
//#define OLED_MOSI   9
//#define OLED_CLK   10
//#define OLED_DC    11
//#define OLED_CS    12
//#define OLED_RESET 13
//Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

// Bitmap of MarilynMonroe Image
const unsigned char MarilynMonroe [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xfc, 0x01, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xc6, 0x00, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xe0, 0x1f, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xc0, 0x1f, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0x00, 0x01, 0xc7, 0xff, 0xff, 0xff, 0xff, 0x8f, 0x00, 0x03, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xfc, 0x00, 0x00, 0xe3, 0xff, 0xff, 0xff, 0xff, 0x9e, 0x00, 0x00, 0x7f, 0xff, 0xfe, 
  0xff, 0xff, 0xe0, 0x00, 0x00, 0x63, 0xff, 0xff, 0xff, 0xff, 0x38, 0x00, 0x00, 0x0f, 0xff, 0xfe, 
  0xff, 0xff, 0x00, 0x02, 0x00, 0x71, 0xff, 0xff, 0xff, 0xff, 0x30, 0x01, 0x80, 0x01, 0xff, 0xfe, 
  0xff, 0xf8, 0x00, 0xff, 0x00, 0x78, 0xff, 0xff, 0xff, 0xfe, 0x70, 0x01, 0xfc, 0x00, 0x1f, 0xfe, 
  0xff, 0xc0, 0x00, 0xff, 0x00, 0x78, 0x7f, 0xff, 0xff, 0xfc, 0xe0, 0x01, 0xfc, 0x00, 0x03, 0xfe, 
  0xff, 0x00, 0x00, 0x3f, 0x00, 0x7c, 0x3f, 0xff, 0xff, 0xf8, 0xe0, 0x00, 0xf8, 0x00, 0x00, 0xfe, 
  0xfe, 0x00, 0x00, 0x1f, 0x00, 0x7e, 0x1f, 0xff, 0xff, 0xf5, 0xc0, 0x00, 0xf0, 0x00, 0x00, 0x7e, 
  0xfc, 0x00, 0x00, 0x0f, 0x00, 0x7f, 0x0f, 0xff, 0xff, 0xeb, 0xc0, 0x00, 0xe0, 0x00, 0x00, 0x7e, 
  0xf8, 0x00, 0x00, 0x07, 0x00, 0xff, 0x87, 0xff, 0xff, 0xa7, 0xfe, 0x00, 0xe0, 0x00, 0x00, 0x3e, 
  0xf8, 0x00, 0x00, 0x07, 0x00, 0xff, 0xc3, 0xff, 0xff, 0x0f, 0xfe, 0x00, 0xe0, 0x00, 0x00, 0x3e, 
  0xf0, 0x00, 0x00, 0x03, 0x00, 0xff, 0xf0, 0xff, 0xfe, 0x3f, 0xfe, 0x01, 0xc0, 0x1f, 0x80, 0x3e, 
  0xf0, 0x03, 0xf0, 0x03, 0x00, 0xff, 0xfc, 0x1f, 0xe0, 0xf8, 0x00, 0x03, 0xc0, 0x2f, 0xef, 0xfe, 
  0xf0, 0x07, 0xf8, 0x07, 0x00, 0x00, 0x3f, 0x80, 0x03, 0xe0, 0x00, 0x03, 0xe0, 0x0f, 0xff, 0xfe, 
  0xf0, 0x07, 0xf8, 0x07, 0x00, 0x00, 0x0f, 0xf0, 0x1f, 0xc0, 0x00, 0x03, 0xe0, 0x00, 0x0f, 0xfe, 
  0xf0, 0x07, 0xff, 0xff, 0x00, 0x00, 0x03, 0xff, 0xfe, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x01, 0xfe, 
  0xe0, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x7e, 
  0xf0, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0xf8, 0x00, 0x00, 0x3e, 
  0xf0, 0x07, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x3e, 
  0xf0, 0x07, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0xff, 0x00, 0x7f, 0xf8, 0x00, 0x1e, 
  0xf0, 0x03, 0xf0, 0x03, 0x00, 0x00, 0x00, 0x30, 0x06, 0x00, 0xff, 0x00, 0x7c, 0x7f, 0xc0, 0x1e, 
  0xf8, 0x01, 0xe0, 0x03, 0x00, 0x7f, 0x80, 0x30, 0x06, 0x00, 0x7e, 0x00, 0x40, 0x1f, 0xc0, 0x1e, 
  0xf8, 0x00, 0x00, 0x07, 0x00, 0x7f, 0x80, 0x30, 0x06, 0x00, 0x00, 0x00, 0x40, 0x07, 0x00, 0x1e, 
  0xfc, 0x00, 0x00, 0x07, 0x00, 0x7f, 0x80, 0x30, 0x06, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x3e, 
  0xfc, 0x00, 0x00, 0x0f, 0x00, 0x7f, 0x80, 0x30, 0x06, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x3e, 
  0xfe, 0x00, 0x00, 0x1f, 0x00, 0x7f, 0x80, 0x30, 0x06, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x3e, 
  0xff, 0x40, 0x00, 0x3f, 0x00, 0x7f, 0x80, 0x30, 0x07, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x7e, 
  0xff, 0x90, 0x00, 0x7f, 0x00, 0x7f, 0xa0, 0x30, 0x07, 0x3c, 0x00, 0x07, 0xfa, 0x00, 0x00, 0xfe, 
  0xff, 0xe3, 0xf1, 0xff, 0x00, 0x7f, 0x80, 0x30, 0x06, 0x00, 0x00, 0x3f, 0xfc, 0x7f, 0xc3, 0xfe, 
  0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe
};

void setup()
{
  Serial.begin(9600);
  
  // initialize the OLED object
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }

  // Uncomment this if you are using SPI
  //if(!display.begin(SSD1306_SWITCHCAPVCC)) {
  //  Serial.println(F("SSD1306 allocation failed"));
  //  for(;;); // Don't proceed, loop forever
  //}

  // Clear the buffer.
  display.clearDisplay();

  // Display bitmap
  display.drawBitmap(0, 0,  MarilynMonroe, 128, 64, WHITE);
  display.display();

  // Invert Display
  //display.invertDisplay(1);
}

void loop() {
}